<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="create_run_jar" name="Create Runnable Jar for Project org.example.standalone with Jar-in-Jar Loader">
	<!--ANT 1.7 is required-->
	<!--define folder properties-->
	<property name="main.class" value="org.example.standalone.Main" />
	<property name="project.build.directory" value="${basedir}/target" />
	<property name="dir.buildfile" value="${project.build.directory}" />
	<property name="dir.classes" value="${dir.buildfile}/classes" />
	<property name="dir.libs" value="${dir.buildfile}/libs" />
	<property name="dir.jarfile" value="${dir.buildfile}" />
	<property name="jar.filename" value="fatjar-example.jar" />
	<property name="jar.file" value="${dir.jarfile}/${jar.filename}" />
	<target name="create_run_jar">
		<path id="build-classpath">
			<dirset dir="${dir.libs}">
				<depth max="0" />
			</dirset>
		</path>

		<pathconvert property="manifest.classpath" pathsep=" ">
			<path refid="build-classpath" />
			<mapper>
				<chainedmapper>
					<!-- since the jars will be placed in the root of the jar
						we want their names with stripped directory to be placed
						in the manifest classpath -->
					<flattenmapper />
					<globmapper from="*" to="*/" />
				</chainedmapper>
			</mapper>
		</pathconvert>

		<jar destfile="${jar.file}">
			<manifest>
				<attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader" />
				<attribute name="Rsrc-Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value="." />
				<attribute name="Rsrc-Class-Path" value="./ ${manifest.classpath}" />
			</manifest>
			<zipfileset src="jar-in-jar-loader.zip" />
			<fileset dir="${dir.classes}" />
			<zipfileset dir="${dir.libs}" />
		</jar>
	</target>
</project>
